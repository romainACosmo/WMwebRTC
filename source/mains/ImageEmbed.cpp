#include <stdio.h>
#include <opencv2/opencv.hpp>
#include "../helpers.cpp"
#include "../WM/wmV1.cpp"
#include "../WM/wmV2.cpp"
#include "../WM/wmV3.cpp"
#include "../WM/wmV4.cpp"
#include "../WM/studyDCT.cpp"

#define LENGTH 512 // 16384
#define NB_BLOCK_SELECTED 512
#define MODE 3
using namespace cv;

/**

g++ $(pkg-config --cflags --libs opencv) -std=c++11  ImageEmbed.cpp -o ImageEmbed

**/

int main(int argc, char** argv )
{

    Mat src = imread("../../lena.jpeg", 1), res, res2;
    Mat src2 = imread("../../IMG_2791.jpeg", 1);
    if ( !src.data )
    {
        printf("No image data \n");
        return -1;
    }
    if ( argc < 3 )
    {
        printf("Invalid parameters: required \"./ImageEmbed v a\" \nWhere 'v' is the embedder version and 'a' the alpha parameter\n");
        return -1;
    }
    int version = atoi(argv[1]);
    double alpha = atof(argv[2]);

    res = Mat::zeros(src.size(), CV_8UC3);

    // length = 16384
    const char wmStr

    // length = 512
    const char wmStr2[] = "00110010001111000000100000011111100011111011000000110011111100010001101000101110000100000101110101010001000000010101100101111100100111100001001100100101111111100000000101001001111100101000000110001000000101010010001101101001110111000011110111101011011011111000111110010011100011110001011000001101011101110110100101101101011010011000110010001110110110001111001101011010000101101111011101100010011011110101010101001111111111011010101101011100111100000110011110000001101101101110010100100001010001000000001010001110";

    int wmInt[LENGTH] = {0};
    str2Array(wmStr2, LENGTH, wmInt);
    int buffer[LENGTH] = {0};
    for (size_t i = 0; i < LENGTH; i++)
      buffer[i] = 1-wmInt[i];

    // wmV1(src, wmInt, LENGTH, res);
    int count = 0;
    std::cout << "Alpha,Embedding Time,PSNR" << std::endl;

    while(count < 5){
      // Mat bgr1[3], bgr2[3];
      // split(src,bgr1);
      // Mat tmp1 = bgr1[0](Rect(0, 16, 8, 8));

      // tmp1.convertTo(tmp1,CV_32FC1);
      //
      // dct(tmp1, tmp1);
      //
      std::cout << count << ",";

      switch (version) {
        case 1:
          wmV1(src, wmInt, LENGTH, res, count);
          break;
        case 2:
          wmV2(src, wmInt, LENGTH, res, count);
          break;
        case 3:
          wmV3(src, wmInt, LENGTH, res, count);
          break;
        case 4:
          if(count != 2)
            wmV4(src, count < 2 ? wmInt : buffer , LENGTH, res, 8);
          break;
        default:
          wmV1(src, wmInt, LENGTH, res, count);
          break;
      }

      // Mat bgr1[3], bgr2[3];
      // split(res,bgr1);
      // std::cout << bgr1[0](Rect(0, 18, 8, 8)) << std::endl;

      int wmRes[LENGTH] = {0};
      // exV1(src, wmRes, LENGTH);
      // int resXor[LENGTH] = {0};
      // myXor(wmInt, wmRes, LENGTH, resXor);

      // split(res,bgr2);
      // Mat tmp2 = bgr2[0](Rect(0, 16, 8, 8));
      // tmp2.convertTo(tmp2,CV_32FC1);
      // dct(tmp2, tmp2);
      // std::cout << std::endl << tmp2 << std::endl;

      std::cout << getPSNR(src, res) << std::endl;
      std::stringstream ss;
      ss << "../../figures/version" << version << "/zalpha8_" << count <<".jpg";
      imwrite(ss.str(), res);
      count+=1;
    }
    // studyDCT(src, res, MODE, NB_BLOCK_SELECTED);
    // studyDCT(src2, res2, MODE, NB_BLOCK_SELECTED);


    imshow("Original", src);

    // Mat bgr1[3], bgr2[3];
    // split(res,bgr1);
    // split(src2,bgr2);
    // // waitKey(0);
    // Mat dctTmp = bgr1[0](Rect(424, 424, 16, 16));
    // Mat dctTmp2 = bgr2[0](Rect(424, 424, 16, 16));
    // dctTmp.convertTo(dctTmp,CV_32FC1);
    // dctTmp2.convertTo(dctTmp2,CV_32FC1);
    //
    // res2 = Mat::zeros(dctTmp.size(), CV_32FC1);
    //
    // dct(dctTmp, dctTmp);
    // dct(dctTmp2, dctTmp2);
    //
    // absdiff(dctTmp, dctTmp2, res2);
    // std::cout << endl << dctTmp << std::endl;
    // std::cout << endl << dctTmp2 << std::endl;
    // std::cout << endl << res2 << std::endl;
    //
    //
    // idct(dctTmp, dctTmp);
    // idct(dctTmp2, dctTmp2);
    //
    // dctTmp.convertTo(dctTmp,CV_8UC1);
    // dctTmp2.convertTo(dctTmp2,CV_8UC1);



    // std::cout << endl << res2(Rect(424, 424, 16, 16)) << std::endl;

    imshow("Watermarked full", res);
    // exV1(res, wmRes, LENGTH);
    // int resXor[LENGTH] = {0};
    // myXor(wmInt, wmRes, LENGTH, resXor);
    // std::cout << "Hamming distance: "<< count1(resXor,LENGTH) << std::endl;

    // imshow("Diff full", res2);

    // imshow("Watermarked blue", bgr1[0]);
    // waitKey(0);

    // imshow("Watermarked block blue", bgr1[0](Rect(424, 424, 16, 16)));
    // waitKey(0);
    // imshow("Photo blue", bgr2[0]);

    // imshow("Photo block blue", bgr2[0](Rect(424, 424, 16, 16)));
    // waitKey(0);



    // exV1(res, wmRes, LENGTH);
    // exV3(src2, wmRes, LENGTH);
    // int resXor[LENGTH] = {0};
    // myXor(wmInt, wmRes, LENGTH, resXor);
    // std::cout << "Hamming distance: "<< count1(resXor,LENGTH) << std::endl;
    return 0;
}
